#N canvas 321 68 994 667 10;
#N canvas 251 23 1570 828 fft 0;
#X obj 696 328 line 0 0.1;
#X obj 696 373 / 2;
#X obj 696 393 mtof;
#X msg 696 307 6 \, 273 26.7;
#X obj 696 351 t f f;
#X obj 731 372 - 6;
#X obj 696 413 / 44100;
#X obj 696 269 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1
1;
#X obj 695 167 loadbang;
#X msg 696 249 1;
#X text 785 311 transformation to log scale;
#N canvas 0 22 671 536 (subpatch) 0;
#X array logFFT 256 float 0;
#X coords 0 100 255 0 400 150 1 0 0;
#X restore 55 381 graph;
#X obj 696 434 * 4096;
#X obj 696 287 metro 20;
#X obj 696 493 moses 0;
#X obj 52 50 inlet~;
#X text 112 50 <- sound to be analyzed;
#X text 53 531 20 Hz;
#X text 414 531 22 kHz;
#X text 785 328 (based on T. Brinkmann's code);
#X text 51 320 Linear Graph;
#X text 51 572 Logarithmic Graph;
#X obj 696 525 tabwrite logFFT;
#X obj 696 462 tabread4 spectrum;
#X text 790 494 (avoid negative values);
#X text 789 285 refresh rate;
#N canvas 107 22 688 468 spectrum 0;
#X obj 499 274 rfft~;
#N canvas 51 367 1153 478 (subpatch) 0;
#X array spectrum 256 float 0;
#X coords 0 256 255 0 400 150 1 0 0;
#X restore 60 134 graph;
#X obj 499 301 *~;
#X obj 526 301 *~;
#X obj 499 352 biquad~ 0 0 0 0 1;
#X obj 499 330 q8_sqrt~;
#X text 58 283 20Hz;
#X obj 499 103 inlet~;
#X text 426 284 22KHz;
#X text 76 52 85.6 element / sec @ 44.1 khz;
#X obj 544 373 bang~, f 6;
#X obj 78 27 block~ 512 4 1;
#X obj 499 396 tabwrite~ spectrum;
#X connect 0 0 2 0;
#X connect 0 0 2 1;
#X connect 0 1 3 0;
#X connect 0 1 3 1;
#X connect 2 0 5 0;
#X connect 3 0 5 0;
#X connect 4 0 12 0;
#X connect 5 0 4 0;
#X connect 7 0 0 0;
#X connect 10 0 12 0;
#X coords 0 -1 1 1 420 200 1 50 100;
#X restore 52 110 pd spectrum;
#X obj 696 192 t b b;
#X msg 792 216 \; pd dsp 1;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 2 0 6 0;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 4 1 5 0;
#X connect 5 0 22 1;
#X connect 6 0 12 0;
#X connect 7 0 13 0;
#X connect 8 0 27 0;
#X connect 9 0 7 0;
#X connect 12 0 23 0;
#X connect 13 0 3 0;
#X connect 14 1 22 0;
#X connect 15 0 26 0;
#X connect 23 0 14 0;
#X connect 27 0 9 0;
#X connect 27 1 28 0;
#X coords 0 -1 1 1 410 200 1 50 350;
#X restore 86 333 pd fft;
#X obj 87 74 adc~;
#X obj 87 100 +~;
#X obj 87 126 /~ 2;
#X obj 163 195 osc~ 1000;
#N canvas 0 22 450 300 gain 0;
#X obj 215 63 inlet;
#X obj 127 232 outlet~;
#X obj 213 139 line~;
#X msg 214 99 \$1 5;
#X obj 138 63 inlet~;
#X obj 132 178 *~;
#X connect 0 0 3 0;
#X connect 2 0 5 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X restore 163 249 pd gain;
#X obj 206 222 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#N canvas 0 22 450 300 gain 0;
#X obj 215 63 inlet;
#X obj 127 232 outlet~;
#X obj 213 139 line~;
#X msg 214 99 \$1 5;
#X obj 138 63 inlet~;
#X obj 132 178 *~;
#X connect 0 0 3 0;
#X connect 2 0 5 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X restore 87 155 pd gain;
#X obj 130 128 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 12700 1;
#X text 283 126 mic input;
#X text 350 223 test sine;
#X text 568 123 A very basic logarithmic spectrum analyzer to be used
in projects where visual display of sound spectra is important. Divided
to 256 bins \, this patch can be adapted into embedded projects using
libPd (only vanilla objects);
#X text 568 197 If using libPd \, you can get logarithmic spectrum
values by reading contents of "logFFT" array from the host application
;
#X obj 547 83 cnv 15 100 10 empty empty LogFFT 20 12 1 36 -262144 -66577
0;
#X text 567 240 (c) Agoston Nagy / stc@binaura.net / 2014;
#X text 567 265 Licensed under GPL v3;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 6 0 5 1;
#X connect 7 0 0 0;
#X connect 8 0 7 1;
